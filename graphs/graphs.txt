revevant algorithms
as per http://youtu.be/utDu3Q7Flrw

DFS
    Graph DFS is O(E + V) where E = edges and V = vertices
    
    "Very simplified without much formality: every edge is considered exactly twice, and every node is processed exactly once, 
    so the complexity has to be a constant multiple of the number of edges as well as the number of vertices"

    O(V) to visit every node
    and in total, across all nodes, every edge is visited twice (from both nodes), giving O(2E) = O(E)
BFS
union-find
    - number of connected components (in undirected)

topological sort
    - given a directed, acyclical graph
    - built on DFS

Dijkstra's Shortest Path Algo
    - for *weighted* graphs
    - find the shortest path from a node and every other node in the  graph
    - uses a heap - constantly looking at the minimum of many dif edges
    - and hashset/hashmap to prevent cycles

Other
For minimum spanning trees:
    - Prim's algo
    - Kruskal's algo
 
Floyd Warshall's Algorithms

